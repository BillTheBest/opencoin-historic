Messages between any two parties of the network


Wallet & Wallet			Wallet & IS						Wallet & DSDB

=============			=====================			=================
= BLANK		=			= MINTING_KEY		=			= LOCK_COINS	=
= COINS		=			= MINT				=			= UNLOCK_COINS	=
=============			= FETCH_MINTED		=			=================
						= DSDB_KEY			=
						= REDEEM_COINS		=
						=====================

============================================================================


********************
* Wallet to Wallet *
********************

=============
= BLANK		=
= COINS		=
=============

BLANK
-----

A:
  BLANK_PRESENT	#hex_string(number_of_blanks)
				blank1
				blank2

B:
  BLANK_FAILURE	#hex_string(number_of_failures)
				#base64(encrypted serial of blank1) "Why did we fail?!?"
				#base64(encrypted serial of blank2) "Why did we fail?!?"

  BLANK_FAILURE	#hex_string(0) "reason"  

  BLANK_REJECT	#hex_string(number_of_failures)
				#base64(encrypted serial of blank1) "Why did we fail?!?"
				#base64(encrypted serial of blank2) "Why did we fail?!?"

  BLANK_REJECT	#hex_string(0) "reason"  

  BLANK_ACCEPT
	 Note: After ACCEPT, a REJECT #hex_string(0) can be given to abort the transaction



COINS
-----

A:
  COINS_SPEND	#hex_string(number_of)
				#base64(coin1)
				#base64(coin2)


  COINS_REJECT	#hex_string(number_of)
				#base64(coin1) "Reason"
				#base64(coin2) "Reason"

  COINS_REJECT	#hex_string(0) "Reason"

  COINS_ACCEPT


============================================================================


****************
* Wallet to IS *
****************

=====================
= MINTING_KEY		=
= MINT				=
= FETCH_MINTED		=
= DSDB_KEY			=
= REDEEM_COINS		=
=====================

MINTING_KEY
-----------

Wallet:
  MINTING_KEY_FETCH_DENOMINATION	#string(denomination)
  MINTING_KEY_FETCH_KEYID	#hexstring(key_id)}

IS:
  MINTING_KEY_PASS	keycertificate
  MINTING_KEY_FAILURE	"Reason"
  


MINT
----

Wallet:
  MINT_REQUEST	#base64(request_id) #hex_string(number_of_blinds) 
				#key_id(blind1) #base64(blind1)
				#key_id(blind2) #base64(blind2)

IS:
  MINT_REJECT	#hex_string(number_of_rejected_blinds)
				#key_id(blind1) "Bad Key ID"
				#key_id(blind2) "Bad Key ID"

  MINT_REFUSE	#hex_string(number_of_rejected_blinds)
				#key_id(blind1) "Some error message"
				#key_id(blind2) "Some error message"

  MINT_ACCEPT	#base64(request_id)



FETCH_MINTED
------------

Wallet:
  FETCH_MINTED_REQUEST	#base64(request_id)


IS:
  FETCH_MINTED_FAILURE	#base64(request_id) "Reason"

  FETCH_MINTED_WAIT	#base64(request_id) "Reason"
  

  FETCH_MINTED_ACCEPT	#base64(request_id) #hex_string(number_of_blinds)
						#base64(signature_of_blind1)
						#base64(signature_of_blind2)



DSDB_KEY
--------------

Wallet:
  DSDB_KEY_REQUEST

IS:
  DSDB_KEY_PASS	keycertificate



REDEEM_COINS
------------

Wallet:
  REDEEM_COINS_REQUEST	#hex_string(transaction_id) "#string(target)" #hex_string(number_of_coins)
						#base64(coin1)
						#base64(coin2)

IS:
  REDEEM_COINS_REJECT	#hex_string(number_of_coins)
						#base64(coin1) "Reason"
						#base64(coin2) "Reason"

  REDEEM_COINS_ACCEPT


============================================================================


******************
* Wallet to DSDB *
******************

=================
= LOCK_COINS	=
= UNLOCK_COINS	=
=================

LOCK_COINS
----------

Wallet:
  LOCK_COINS_REQUEST	#key_id_of_DSDB #hex_string(transaction_id) #hex_string(#number_of_obfuscated_blanks)
						#key_identifier1 #encrypted_serial1
						#key_identifier2 #encrypted_serial2

DSDB:
  LOCK_COINS_ACCEPT		#hex_string(transaction_id) TIME(lock_expires)

  LOCK_COINS_FAILURE	#hex_sting(transaction_id) #hex_string(number_of_failures)
						#key_identifier1 #encrypted_serial1 "Reason 1"
						#key_identifier2 #encrypted_serial2 "Reason 2"
						Reasons:
							Key ID of DSDB is unknown or expired       Permanant
							Key ID of blank is unknown or expired      Permanant
							Decryption of serial failed                Permanant
							Serial already spent                       Permanant
							Serial locked (not spent)                  Temporary



UNLOCK_COINS
------------

Wallet:
  UNLOCK_COINS_REQUEST	#hex_string(transaction_id)

DSDB:
  UNLOCK_COINS_FAILURE	#hex_string(transaction_id) "Reason"
  UNLOCK_COINS_PASS


