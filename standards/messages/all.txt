Messages between any two parties of the network


Wallet & Wallet         Wallet & IS                     Wallet & DSDB

=============           =====================           =================
= BLANK     =           = MINTING_KEY       =           = LOCK_COINS    =
= COINS     =           = MINT              =           = UNLOCK_COINS  =
=============           = FETCH_MINTED      =           =================
                        = DSDB_KEY          =
                        = REDEEM_COINS      =
                        =====================
                        
    Prior: All messages between two entities that can occur directly before this one
    Follow: All messages between two entities that can occur directly after this one
    
    Hello is the initial handshake between two entities or the state after a Goodbye
    Goodbye is the end of a transaction, although also a Hello for a new transaction

============================================================================


********************
* Wallet to Wallet *
********************

=============
= BLANK     =
= COINS     =
=============

BLANK
-----

A:
  BLANK_PRESENT #hex_string(number_of_blanks)
                blank1
                blank2
        Prior:  Hello
        Follow: BLANK_FAILURE
                BLANK_REJECT
                BLANK_ACCEPT

B:
  BLANK_REJECT  #hex_string(number_of_failures)
                #base64(encrypted serial of blank1) "Reason1"
                #base64(encrypted serial of blank2) "Reason2"
                    Reasons:
                        Malformed blank
                        Unknown issuer
                            Note: Also used for an untrusted issuer
        Prior:  BLANK_PRESENT
        Follow: Goodbye
                        
  BLANK_REJECT  #hex_string(0) "reason"
                    Reason:
                        Cancelled
                        Insufficient currency
        Prior:  BLANK_PRESENT
        Follow: Goodbye
                        

  BLANK_FAILURE #hex_string(number_of_failures)
                #base64(encrypted serial of blank1) "Reason1"
                #base64(encrypted serial of blank2) "Reason2"
                    Reasons:
                        DSDB: Key ID of DSDB is unknown or expired      Permanant
                        DSDB: Key ID of blank is unknown or expired     Permanant
                        DSDB: Decryption of serial failed               Permanant
                        DSDB: Serial already redeemed                   Permanant
                        DSDB: Serial locked (not spent)                 Temporary
        Prior:  BLANK_PRESENT
        Follow: Goodbye

  BLANK_FAILURE #hex_string(0) "reason"
                    Reasons:
                        Cancelled
        Prior:  BLANK_PRESENT
                BLANK_ACCEPT (Message from self)
        Follow: Goodbye

  BLANK_ACCEPT
        Note:   After ACCEPT, a REJECT #hex_string(0) can be given to abort the transaction
        Prior:  BLANK_PRESENT
        Follow: COINS_REDEEM
                BLANK_REJECT (Message from self)



COINS
-----

A:
  COINS_REDEEM  #hex_string(number_of)
                #base64(coin1)
                #base64(coin2)
        Prior:  BLANK_ACCEPT
        Follow: COINS_REJECT
                COINS_ACCEPT

B:
  COINS_REJECT  #hex_string(number_of)
                #base64(coin1) "Reason1"
                #base64(coin2) "Reason2"
                    Reasons:
                        Invalid coin
                        Unknown coin
                            Note: Used when the coin we are given is different than the blank
        Prior:  COINS_REDEEM
        Follow: COINS_REDEEM
                Goodbye

  COINS_REJECT  #hex_string(0) "Reason"
                    Reasons:
                        *I can't think of anything valid*
        Prior:  COINS_REDEEM
        Follow: COINS_REDEEM
                Goodbye

  COINS_ACCEPT
        Prior:  COINS_REDEEM
        Follow: Goodbye




============================================================================


****************
* Wallet to IS *
****************

=====================
= MINTING_KEY       =
= MINT              =
= FETCH_MINTED      =
= DSDB_KEY          =
= REDEEM_COINS      =
=====================

MINTING_KEY
-----------

Wallet:
  MINTING_KEY_FETCH_DENOMINATION    #string(denomination)
    Prior:  Hello
    Follow: MINTING_KEY_PASS
            MINTING_KEY_FAILURE
            
  MINTING_KEY_FETCH_KEYID   #hexstring(key_id)
    Prior:  Hello
    Follow: MINTING_KEY_PASS
            MINTING_KEY_FAILURE

IS:
  MINTING_KEY_PASS  keycertificate
    Prior:  MINTING_KEY_FETCH_DENOMINATION
            MINTING_KEY_FETCH_KEYID
    Follow: Goodbye
            
  MINTING_KEY_FAILURE   "Reason"
                        Reasons:
                            Unknown denomination
                            Unknown key_id
    Prior:  MINTING_KEY_FETCH_DENOMINATION
            MINTING_KEY_FETCH_KEYID
    Follow: Goodbye
  


MINT
----

Wallet:
  MINT_REQUEST  #base64(request_id) #hex_string(number_of_blinds) 
                #key_id(blind1) #base64(blind1)
                #key_id(blind2) #base64(blind2)
    Prior:  Hello
    Follow: MINT_REJECT
            MINT_ACCEPT

IS:
  MINT_REJECT   #hex_string(number_of_rejected_blinds)
                #key_id(blind1) "Reason1"
                #key_id(blind2) "Reason2"
                    Reasons:
                        Unknown key_id
                        Unable to blind
                            Question: if the IS doesn't have the minting key, use a similar key to test?
    Prior:  MINT_REQUEST
    Follow: Goodbye

  MINT_ACCEPT   #base64(request_id)
    Prior:  MINT_REQUEST
    Follow: Goodbye



FETCH_MINTED
------------

Wallet:
  FETCH_MINTED_REQUEST  #base64(request_id)
    Prior:  Hello
    Follow: FETCH_MINTED_FAILURE
            FETCH_MINTED_WAIT
            FETCH_MINTED_ACCEPT


IS:
  FETCH_MINTED_FAILURE  #base64(request_id) "Reason"
                            Reasons:
                                Request not credited
                                    Note: this message may be a temporary failure (FETCH_MINTED_WAIT)
                                Unknown request_id
                                Unable to blind (note: redundant? maybe not for all signatures)
    Prior:  FETCH_MINTED_REQUEST
    Follow: Goodbye
                                
  FETCH_MINTED_WAIT #base64(request_id) "Reason"
                            Reasons:
                                Not yet minted
                                Request not credited
                                    Note: this message may be a permanant failure (FETCH_MINTED_FAILURE)
    Prior:  FETCH_MINTED_REQUEST
    Follow: Goodbye
  
  FETCH_MINTED_ACCEPT   #base64(request_id) #hex_string(number_of_blinds)
                        #base64(signature_of_blind1)
                        #base64(signature_of_blind2)
    Prior:  FETCH_MINTED_REQUEST
    Follow: Goodbye



DSDB_KEY
--------------

Wallet:
  DSDB_KEY_REQUEST
    Prior:  Hello
    Follow: DSDB_KEY_PASS

IS:
  DSDB_KEY_PASS keycertificate
    Prior:  DSDB_KEY_REQUEST
    Follow: Goodbye



REDEEM_COINS
------------

Wallet:
  REDEEM_COINS_REQUEST  #hex_string(transaction_id) "#string(target)" #hex_string(number_of_coins)
                        #base64(coin1)
                        #base64(coin2)
                            Targets:
                                Strings which refer to a specific target for the redeeming of the coins.
                                i.e. an account somewhere, a request for more coins, etc.
                                The only required defined target is for another transaction to the mint.
                                    MINT_REQUEST=#string(request_id)
    Prior:  Hello
    Follow: REDEEM_COINS_REJECT
            REDEEM_COINS_ACCEPT
IS:
  REDEEM_COINS_REJECT   #hex_string(number_of_coins)
                        #base64(coin1) "Reason1"
                        #base64(coin2) "Reason2"
                            Reasons:
                                Unknown key_id
                                Coin expired
                                Coin already redeemed
                                Invalid coin
                                Unknown target
                                    Note: Can be used if Mint requires request_id to already be awaiting minting
    Prior:  REDEEM_COINS_REQUEST
    Follow: Goodbye

  REDEEM_COINS_ACCEPT
    Prior:  REDEEM_COINS_REQUEST
    Follow: Goodbye


============================================================================


******************
* Wallet to DSDB *
******************

=================
= LOCK_COINS    =
= UNLOCK_COINS  =
=================

LOCK_COINS
----------

Wallet:
  LOCK_COINS_REQUEST    #key_id_of_DSDB #hex_string(transaction_id) #hex_string(#number_of_obfuscated_blanks)
                        #key_identifier1 #encrypted_serial1
                        #key_identifier2 #encrypted_serial2
    Prior:  Hello
    Follow: LOCK_COINS_ACCEPT
            LOCK_COINS_FAILURE

DSDB:
  LOCK_COINS_ACCEPT     #hex_string(transaction_id) TIME(lock_expires)
    Prior:  LOCK_COINS_REQUEST
    Follow: Goodbye

  LOCK_COINS_FAILURE    #hex_string(transaction_id) #hex_string(number_of_failures)
                        #key_identifier1 #encrypted_serial1 "Reason 1"
                        #key_identifier2 #encrypted_serial2 "Reason 2"
                            Reasons:
                                Key ID of DSDB is unknown or expired        Permanant
                                Key ID of blank is unknown or expired       Permanant
                                Decryption of serial failed                 Permanant
                                Serial already redeemed                     Permanant
                                Serial locked (not spent)                   Temporary
    Prior:  LOCK_COINS_REQUEST
    Follow: Goodbye



UNLOCK_COINS
------------

Wallet:
  UNLOCK_COINS_REQUEST  #hex_string(transaction_id)
    Prior:  Hello
    Follow: UNLOCK_COINS_PASS
            UNLOCK_COINS_FAILURE

DSDB:
  UNLOCK_COINS_PASS
    Prior:  UNLOCK_COINS_REQUEST
    Follow: Goodbye
    
  UNLOCK_COINS_FAILURE  #hex_string(transaction_id) "Reason"
                            Reasons:
                                Unknown transaction_id
                                Transaction already completed
                                Lock expired *Not really a failure...*
    Prior:  UNLOCK_COINS_REQUEST
    Follow: Goodbye




